import os
import firebase_admin
from firebase_admin import credentials, db
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder, CommandHandler,
    MessageHandler, ContextTypes, filters
)
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

BOT_TOKEN = os.getenv("BOT_TOKEN")
FIREBASE_DB_URL = os.getenv("FIREBASE_DB_URL")

if not BOT_TOKEN or not FIREBASE_DB_URL:
    raise ValueError("‚ùå –ù–µ –∑–∞–¥–∞–Ω—ã BOT_TOKEN –∏–ª–∏ FIREBASE_DB_URL")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase
if not firebase_admin._apps:
    cred = credentials.Certificate("firebase-key.json")
    firebase_admin.initialize_app(cred, {
        "databaseURL": FIREBASE_DB_URL
    })

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        ["üìä –°—Ç–∞—Ç—É—Å", "‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏"],
        ["üîÑ –û–±–Ω–æ–≤–∏—Ç—å"]
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –Ø SmartPlant üå±\n–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=reply_markup
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ reply-–∫–Ω–æ–ø–æ–∫
async def reply_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text

    if text == "üìä –°—Ç–∞—Ç—É—Å":
        try:
            ref = db.reference("plants/plant_001/data")
            data = ref.get() or {}

            temp = data.get("temperature", "‚Äî")
            hum = data.get("humidity", "‚Äî")
            soil = data.get("soilMoisture", "‚Äî")

            await update.message.reply_text(
                f"üåø –°–æ—Å—Ç–æ—è–Ω–∏–µ —Ä–∞—Å—Ç–µ–Ω–∏—è:\n"
                f"üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞C\n"
                f"üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å –≤–æ–∑–¥—É—Ö–∞: {hum}%\n"
                f"üå± –í–ª–∞–∂–Ω–æ—Å—Ç—å –ø–æ—á–≤—ã: {soil}%"
            )
        except Exception as e:
            await update.message.reply_text(f"‚ö† –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")

    elif text == "‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏":
        await update.message.reply_text("‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã üôÇ")

    else:
        await update.message.reply_text("ü§ñ –Ø –Ω–µ –ø–æ–Ω—è–ª –∫–æ–º–∞–Ω–¥—É. –í—ã–±–µ—Ä–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ üëá")

# –ó–∞–ø—É—Å–∫
if __name__ == '__main__':
    app = ApplicationBuilder().token(BOT_TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT, reply_handler))

    print("‚úÖ –ë–æ—Ç SmartPlant –∑–∞–ø—É—â–µ–Ω –∏ —Å–ª—É—à–∞–µ—Ç Telegram")
    app.run_polling()
